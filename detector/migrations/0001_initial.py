# Generated by Django 5.0.2 on 2025-03-21 13:33

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NetworkTraffic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('source_ip', models.GenericIPAddressField()),
                ('destination_ip', models.GenericIPAddressField()),
                ('source_port', models.IntegerField()),
                ('destination_port', models.IntegerField()),
                ('protocol', models.CharField(max_length=10)),
                ('packet_size', models.IntegerField()),
                ('flags', models.CharField(blank=True, max_length=50)),
                ('payload', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='DetectedThreat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('threat_type', models.CharField(max_length=100)),
                ('severity', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], max_length=10)),
                ('description', models.TextField()),
                ('source_ip', models.GenericIPAddressField()),
                ('destination_ip', models.GenericIPAddressField()),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolution_notes', models.TextField(blank=True)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('related_traffic', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='detector.networktraffic')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SecurityReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('report_type', models.CharField(max_length=50)),
                ('content', models.JSONField()),
                ('is_archived', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SecurityScan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('scan_type', models.CharField(choices=[('PORT', 'Port Scan'), ('VULN', 'Vulnerability Scan'), ('PCAP', 'PCAP Analysis')], max_length=10)),
                ('target', models.CharField(max_length=255)),
                ('status', models.CharField(default='pending', max_length=20)),
                ('results', models.JSONField(blank=True, null=True)),
                ('pcap_file', models.FileField(blank=True, null=True, upload_to='pcaps/')),
                ('initiated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
    ]
